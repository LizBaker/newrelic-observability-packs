name: Update quickstarts

env:
  THIRD_PARTY_GIT_AUTHOR_EMAIL: opensource+bot@newrelic.com
  THIRD_PARTY_GIT_AUTHOR_NAME: nr-opensource-bot
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  URL: https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/files
  DRY_RUN: false

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  generate-uuid:
    name: Generate UUID
    if: ${{github.event.pull_request.merged}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          ref: "main"
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: cd utils && yarn install

      - name: Generate UUIDs for quickstarts
        id: generate-uuids
        run: cd utils && yarn generate-uuids

      - name: Commit changes
        id: commit-changes
        run: |
          git config --local user.email "${{ env.THIRD_PARTY_GIT_AUTHOR_EMAIL }}"
          git config --local user.name "${{ env.THIRD_PARTY_GIT_AUTHOR_NAME }}"
          git add ./quickstarts/*
          git diff-index --quiet HEAD ./quickstarts/* || git commit -m 'chore: generate UUID(s) [skip ci]'
          echo "::set-output name=commit::true"

      - name: Push Commit
        if: steps.commit-changes.outputs.commit == 'true'
        run: git push origin HEAD


  submit-install-plans:
    name: Submit install plans
    needs: [generate-uuid]
    if: ${{github.event.pull_request.merged}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        # Ensure we have the most recent commit to `main`
        with:
          ref: "main"
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: cd utils && yarn install

      - name: Update install plans - staging
        env:
          NR_API_URL: ${{ secrets.NR_API_URL_STAGING }}
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN_STAGING }}
        run: |
          cd utils && yarn create-validate-install-plans ${URL} ${DRY_RUN}

      - name: Update install plans - production
        env:
          NR_API_URL: ${{ secrets.NR_API_URL }}
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN }}
        run: |
          cd utils && yarn create-validate-install-plans ${URL} ${DRY_RUN}

      - name: Update install plans - EU
        env:
          NR_API_URL: ${{ secrets.NR_API_URL_EU }}
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN_EU }}
        run: |
          cd utils && yarn create-validate-install-plans ${URL} ${DRY_RUN}
      
  submit-quickstarts:
    name: Submit quickstarts
    needs: [generate-uuid, submit-install-plans]
    if: ${{github.event.pull_request.merged}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        # Ensure we have the most recent commit to `main`
        with:
          ref: "main"
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: cd utils && yarn install

      - name: Update quickstarts - staging
        env:
          NR_API_URL: ${{ secrets.NR_API_URL_STAGING }}
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN_STAGING }}
        run: |
          cd utils && yarn create-validate-pr-quickstarts ${URL} ${DRY_RUN}

      - name: Update quickstarts - production
        env:
          NR_API_URL: ${{ secrets.NR_API_URL }}
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN}}
        run: |
          cd utils && yarn create-validate-pr-quickstarts ${URL} ${DRY_RUN}

      - name: Update quickstarts - EU
        env:
          NR_API_URL: ${{ secrets.NR_API_URL_EU }}
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN_EU }}
        run: |
          cd utils && yarn create-validate-pr-quickstarts ${URL} ${DRY_RUN}
